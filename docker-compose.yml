version: '3'

networks:
  game-network:
    driver: bridge

services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - game-network

  app:
    image: quake:v0.0.1
    environment:
      SERVICE_NAME: quake-service
      ENVIRONMENT: development
      FILE_NAME: log.txt
      SERVER_ADDRESS: 0.0.0.0
      SERVER_PORT: 8000
      REDIS_SERVER: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      GIN_MODE: release
      API_SECRET: quake
      API_AUTH_SKIP_ROUTES: /v1/healthcheck
      OPEN_TELEMETRY_COLLECTOR_URL: http://otel_collector:14278/api/traces
      USER: root
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - otel_collector
    networks:
      - game-network

  jaeger:
    platform: linux/amd64
    networks:
      - game-network
    image: jaegertracing/all-in-one:latest
    volumes:
      - "./infra/tracing/config/jaeger-ui.json:/etc/jaeger/jaeger-ui.json"
    command: --query.ui-config /etc/jaeger/jaeger-ui.json
    environment:
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_SERVER_URL=http://prometheus:9090
    ports:
      - "14250:14250"
      - "14268:14268"
      - "6831:6831/udp"
      - "16686:16686"
      - "16685:16685"

  otel_collector:
    networks:
      - game-network
    image: otel/opentelemetry-collector-contrib:latest
    volumes:
      - "./infra/tracing/config/otel-collector-config.yml:/etc/otelcol/otel-collector-config.yml"
    command: --config /etc/otelcol/otel-collector-config.yml
    ports:
      - "14278:14278"
    depends_on:
      - jaeger
      
  prometheus:
    platform: linux/amd64
    networks:
      - game-network
    image: prom/prometheus:latest
    volumes:
      - "./infra/tracing/config/prometheus.yml:/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"